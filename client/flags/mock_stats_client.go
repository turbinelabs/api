// Automatically generated by MockGen. DO NOT EDIT!
// Source: stats_client.go

package flags

import (
	gomock "github.com/golang/mock/gomock"
	stats "github.com/turbinelabs/api/service/stats"
	executor "github.com/turbinelabs/nonstdlib/executor"
	log "log"
)

// Mock of StatsClientFromFlags interface
type MockStatsClientFromFlags struct {
	ctrl     *gomock.Controller
	recorder *_MockStatsClientFromFlagsRecorder
}

// Recorder for MockStatsClientFromFlags (not exported)
type _MockStatsClientFromFlagsRecorder struct {
	mock *MockStatsClientFromFlags
}

func NewMockStatsClientFromFlags(ctrl *gomock.Controller) *MockStatsClientFromFlags {
	mock := &MockStatsClientFromFlags{ctrl: ctrl}
	mock.recorder = &_MockStatsClientFromFlagsRecorder{mock}
	return mock
}

func (_m *MockStatsClientFromFlags) EXPECT() *_MockStatsClientFromFlagsRecorder {
	return _m.recorder
}

func (_m *MockStatsClientFromFlags) Validate() error {
	ret := _m.ctrl.Call(_m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockStatsClientFromFlagsRecorder) Validate() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate")
}

func (_m *MockStatsClientFromFlags) Make(_param0 executor.Executor, _param1 *log.Logger) (stats.StatsService, error) {
	ret := _m.ctrl.Call(_m, "Make", _param0, _param1)
	ret0, _ := ret[0].(stats.StatsService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockStatsClientFromFlagsRecorder) Make(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Make", arg0, arg1)
}

func (_m *MockStatsClientFromFlags) APIKey() string {
	ret := _m.ctrl.Call(_m, "APIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockStatsClientFromFlagsRecorder) APIKey() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "APIKey")
}
