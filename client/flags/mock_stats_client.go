// Code generated by MockGen. DO NOT EDIT.
// Source: stats_client.go

// Package flags is a generated GoMock package.
package flags

import (
	gomock "github.com/golang/mock/gomock"
	stats "github.com/turbinelabs/api/service/stats"
	log "log"
	reflect "reflect"
)

// MockStatsClientFromFlags is a mock of StatsClientFromFlags interface
type MockStatsClientFromFlags struct {
	ctrl     *gomock.Controller
	recorder *MockStatsClientFromFlagsMockRecorder
}

// MockStatsClientFromFlagsMockRecorder is the mock recorder for MockStatsClientFromFlags
type MockStatsClientFromFlagsMockRecorder struct {
	mock *MockStatsClientFromFlags
}

// NewMockStatsClientFromFlags creates a new mock instance
func NewMockStatsClientFromFlags(ctrl *gomock.Controller) *MockStatsClientFromFlags {
	mock := &MockStatsClientFromFlags{ctrl: ctrl}
	mock.recorder = &MockStatsClientFromFlagsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStatsClientFromFlags) EXPECT() *MockStatsClientFromFlagsMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockStatsClientFromFlags) Validate() error {
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockStatsClientFromFlagsMockRecorder) Validate() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockStatsClientFromFlags)(nil).Validate))
}

// Make mocks base method
func (m *MockStatsClientFromFlags) Make(arg0 *log.Logger) (stats.StatsService, error) {
	ret := m.ctrl.Call(m, "Make", arg0)
	ret0, _ := ret[0].(stats.StatsService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Make indicates an expected call of Make
func (mr *MockStatsClientFromFlagsMockRecorder) Make(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Make", reflect.TypeOf((*MockStatsClientFromFlags)(nil).Make), arg0)
}

// MakeV2 mocks base method
func (m *MockStatsClientFromFlags) MakeV2(arg0 *log.Logger) (stats.StatsServiceV2, error) {
	ret := m.ctrl.Call(m, "MakeV2", arg0)
	ret0, _ := ret[0].(stats.StatsServiceV2)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MakeV2 indicates an expected call of MakeV2
func (mr *MockStatsClientFromFlagsMockRecorder) MakeV2(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeV2", reflect.TypeOf((*MockStatsClientFromFlags)(nil).MakeV2), arg0)
}

// APIKey mocks base method
func (m *MockStatsClientFromFlags) APIKey() string {
	ret := m.ctrl.Call(m, "APIKey")
	ret0, _ := ret[0].(string)
	return ret0
}

// APIKey indicates an expected call of APIKey
func (mr *MockStatsClientFromFlagsMockRecorder) APIKey() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "APIKey", reflect.TypeOf((*MockStatsClientFromFlags)(nil).APIKey))
}
