// Code generated by MockGen. DO NOT EDIT.
// Source: stats.go

// Package client is a generated GoMock package.
package client

import (
	gomock "github.com/golang/mock/gomock"
	stats "github.com/turbinelabs/api/service/stats"
	executor "github.com/turbinelabs/nonstdlib/executor"
	reflect "reflect"
)

// mockInternalStatsClient is a mock of internalStatsClient interface
type mockInternalStatsClient struct {
	ctrl     *gomock.Controller
	recorder *mockInternalStatsClientMockRecorder
}

// mockInternalStatsClientMockRecorder is the mock recorder for mockInternalStatsClient
type mockInternalStatsClientMockRecorder struct {
	mock *mockInternalStatsClient
}

// newMockInternalStatsClient creates a new mock instance
func newMockInternalStatsClient(ctrl *gomock.Controller) *mockInternalStatsClient {
	mock := &mockInternalStatsClient{ctrl: ctrl}
	mock.recorder = &mockInternalStatsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *mockInternalStatsClient) EXPECT() *mockInternalStatsClientMockRecorder {
	return m.recorder
}

// Forward mocks base method
func (m *mockInternalStatsClient) Forward(arg0 *stats.Payload) (*stats.ForwardResult, error) {
	ret := m.ctrl.Call(m, "Forward", arg0)
	ret0, _ := ret[0].(*stats.ForwardResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Forward indicates an expected call of Forward
func (mr *mockInternalStatsClientMockRecorder) Forward(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Forward", reflect.TypeOf((*mockInternalStatsClient)(nil).Forward), arg0)
}

// Query mocks base method
func (m *mockInternalStatsClient) Query(arg0 *stats.Query) (*stats.QueryResult, error) {
	ret := m.ctrl.Call(m, "Query", arg0)
	ret0, _ := ret[0].(*stats.QueryResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query
func (mr *mockInternalStatsClientMockRecorder) Query(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*mockInternalStatsClient)(nil).Query), arg0)
}

// Close mocks base method
func (m *mockInternalStatsClient) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *mockInternalStatsClientMockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*mockInternalStatsClient)(nil).Close))
}

// ForwardWithCallback mocks base method
func (m *mockInternalStatsClient) ForwardWithCallback(arg0 interface{}, arg1 executor.CallbackFunc) error {
	ret := m.ctrl.Call(m, "ForwardWithCallback", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ForwardWithCallback indicates an expected call of ForwardWithCallback
func (mr *mockInternalStatsClientMockRecorder) ForwardWithCallback(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForwardWithCallback", reflect.TypeOf((*mockInternalStatsClient)(nil).ForwardWithCallback), arg0, arg1)
}
