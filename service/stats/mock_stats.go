// Code generated by MockGen. DO NOT EDIT.
// Source: stats.go

// Package stats is a generated GoMock package.
package stats

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStatsServiceV2 is a mock of StatsServiceV2 interface
type MockStatsServiceV2 struct {
	ctrl     *gomock.Controller
	recorder *MockStatsServiceV2MockRecorder
}

// MockStatsServiceV2MockRecorder is the mock recorder for MockStatsServiceV2
type MockStatsServiceV2MockRecorder struct {
	mock *MockStatsServiceV2
}

// NewMockStatsServiceV2 creates a new mock instance
func NewMockStatsServiceV2(ctrl *gomock.Controller) *MockStatsServiceV2 {
	mock := &MockStatsServiceV2{ctrl: ctrl}
	mock.recorder = &MockStatsServiceV2MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStatsServiceV2) EXPECT() *MockStatsServiceV2MockRecorder {
	return m.recorder
}

// ForwardV2 mocks base method
func (m *MockStatsServiceV2) ForwardV2(arg0 *PayloadV2) (*ForwardResult, error) {
	ret := m.ctrl.Call(m, "ForwardV2", arg0)
	ret0, _ := ret[0].(*ForwardResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ForwardV2 indicates an expected call of ForwardV2
func (mr *MockStatsServiceV2MockRecorder) ForwardV2(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForwardV2", reflect.TypeOf((*MockStatsServiceV2)(nil).ForwardV2), arg0)
}

// Query mocks base method
func (m *MockStatsServiceV2) Query(arg0 *Query) (*QueryResult, error) {
	ret := m.ctrl.Call(m, "Query", arg0)
	ret0, _ := ret[0].(*QueryResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Query indicates an expected call of Query
func (mr *MockStatsServiceV2MockRecorder) Query(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Query", reflect.TypeOf((*MockStatsServiceV2)(nil).Query), arg0)
}

// Close mocks base method
func (m *MockStatsServiceV2) Close() error {
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close
func (mr *MockStatsServiceV2MockRecorder) Close() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockStatsServiceV2)(nil).Close))
}
