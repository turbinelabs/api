// Automatically generated by MockGen. DO NOT EDIT!
// Source: history.go

package service

import (
	gomock "github.com/golang/mock/gomock"
	api "github.com/turbinelabs/api"
	changelog "github.com/turbinelabs/api/service/changelog"
	time "time"
)

// Mock of History interface
type MockHistory struct {
	ctrl     *gomock.Controller
	recorder *_MockHistoryRecorder
}

// Recorder for MockHistory (not exported)
type _MockHistoryRecorder struct {
	mock *MockHistory
}

func NewMockHistory(ctrl *gomock.Controller) *MockHistory {
	mock := &MockHistory{ctrl: ctrl}
	mock.recorder = &_MockHistoryRecorder{mock}
	return mock
}

func (_m *MockHistory) EXPECT() *_MockHistoryRecorder {
	return _m.recorder
}

func (_m *MockHistory) Index(filters changelog.FilterExpr) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "Index", filters)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) Index(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Index", arg0)
}

func (_m *MockHistory) DomainGraph(domainKey api.DomainKey, start time.Time, stop time.Time) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "DomainGraph", domainKey, start, stop)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) DomainGraph(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DomainGraph", arg0, arg1, arg2)
}

func (_m *MockHistory) RouteGraph(routeKey api.RouteKey, start time.Time, stop time.Time) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "RouteGraph", routeKey, start, stop)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) RouteGraph(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RouteGraph", arg0, arg1, arg2)
}

func (_m *MockHistory) SharedRulesGraph(sharedRulesKey api.SharedRulesKey, start time.Time, stop time.Time) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "SharedRulesGraph", sharedRulesKey, start, stop)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) SharedRulesGraph(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SharedRulesGraph", arg0, arg1, arg2)
}

func (_m *MockHistory) ClusterGraph(clusterKey api.ClusterKey, start time.Time, stop time.Time) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "ClusterGraph", clusterKey, start, stop)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) ClusterGraph(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ClusterGraph", arg0, arg1, arg2)
}

func (_m *MockHistory) Zone(zoneKey api.ZoneKey, start time.Time, stop time.Time) ([]api.ChangeDescription, error) {
	ret := _m.ctrl.Call(_m, "Zone", zoneKey, start, stop)
	ret0, _ := ret[0].([]api.ChangeDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockHistoryRecorder) Zone(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Zone", arg0, arg1, arg2)
}
